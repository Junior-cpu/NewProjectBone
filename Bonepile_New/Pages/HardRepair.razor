@page "/hardrepair"
@inject HardRepairService  hardService
@inject NavigationManager Navigation

<h3 class="mb-5">Report Geral HardRepair</h3>

@* <EditForm Model="repairr" method="post" OnValidSubmit="Consultar" FormName="Form1">

    <div class="form-group">
        <label>Data Início:</label>
        <InputDate @bind-Value="dataInicio" class="form-control" />
    </div>

    <div class="form-group">
        <label>Data Fim:</label>
        <InputDate @bind-Value="dataFim" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary" >Consultar</button>
</EditForm> *@


<div class="mb-lg-5">

    <MatDatePicker @bind-Value="dataInicio" Label="Data Início" />
    <MatDatePicker @bind-Value="dataFim" Label="Data Fim" class="inpu" />
    <MatButton Unelevated="true" class="button" OnClick="Consultar">Consultar</MatButton>
    <MatButton Unelevated="false" class="button" OnClick="Limpar">limpar pesquisa</MatButton>
</div>

@if (repair != null)
{
    <MatTable Items="@repair" LoadInitialData="true" Striped="true" RequestApiOnlyOnce="true" AllowSelection="true" RowClass="tester"
              ApiUrl="" FilterByColumnName="Cliente" DebounceMilliseconds="150" Class="mat-elevation-z5 mt-xxl-5 text-nowrap">
        
        <MatTableHeader>
            <th>Serial</th>
            <th>Partnumber</th>
            <th>Modelo</th>
            <th>Cliente</th>
            <th>Unit Status</th>
            <th>Unit State</th>
            <th>Estação</th>
            <th>Data</th>
            <th>Aging</th>
        </MatTableHeader>
        <MatTableRow>
          @*   <td>@String.Format("{0:d}", @context.Id)</td> *@
            <td>@context.Serial_Number</td>
            <td>@context.Part_Number</td>
            <td>@context.Modelo</td>
            <td>@context.Cliente</td>
            <td>@context.Unit_Status</td>
            <td>@context.Unit_State</td>
            <td>@context.Station</td>
            <td>@context.Update_Date</td>
            <td>@context.Aging</td>

        </MatTableRow>
    </MatTable>
}


@code {

    private DateTime? dataInicio ;
    private DateTime? dataFim ;


    private List<HardRepairModel>? repair;
    private HardRepairModel repairr = new HardRepairModel();


    private async Task Consultar()
    {
        if(dataInicio.HasValue && dataFim.HasValue)
        {
        repair = await hardService.Get(dataInicio.Value.Date,dataFim.Value.Date);    
            
        }
    }
    private void Limpar()
    {
        Navigation.NavigateTo(Navigation.Uri, forceLoad: true);
    }
}




<style>
    .page{
    background-color:#F7F7F7;
    }
</style>
            
        

