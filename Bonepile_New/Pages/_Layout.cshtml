@using Microsoft.AspNetCore.Components.Web
@namespace Bonepile_New.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="Bonepile_New.styles.css" rel="stylesheet" />
    <link href="apexcharts/apexcharts.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link href="_content/MatBlazor/dist/matBlazor.css" rel="stylesheet" />
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="_content/Blazor-ApexCharts/js/apex-charts.min.js"></script>
    <script src="_content/Blazor-ApexCharts/js/blazor-apex-charts.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="_content/MatBlazor/dist/matBlazor.js"></script>

    <script src="chart.js"></script>
    <script src="chart802.js"></script>
    <script src="chartMtr.js"></script>
    <script src="chartMtrp09.js"></script>
    <script src="chartMtrp12.js"></script>
    <script src="donut.js"></script>
    <script src="chartJs.js"></script>
    <script src="station.js"></script>
    <script src="cliente.js"></script>
    <script src="clienteGeral.js"></script>
    <script src="~/LocalStorage.js"></script>




@*     <script>
        function focusBarcodeInput() {
            const input = document.getElementById('barcodeInput');
            if (input) input.focus();
        }
    </script> *@

@*       <script>
       
          function ScannerFunction() {

            $("#barcodeInput").keyup(function (event) {
                if (event.key === "Enter") {
                    var serial = $('#barcodeInput').val();
                    const resultado = await DotNet.invokeMethodAsync('Bonepile_New', 'HandleKeyUp', serial);
                }
            });
          }
     
    </script> *@


<script>
        function simularEnter() {
            var event = new KeyboardEvent('keydown', {
                key: 'Enter',
                code: 'Enter',
                keyCode: 13, // Código ASCII para Enter
                which: 13,
                bubbles: true,
                cancelable: true
            });

            // Dispara o evento em um elemento específico, como um campo de entrada ou um botão
            // Para simular a ação em um campo de input específico, substitua "document.querySelector()"
            var meuCampo = document.querySelector('input'); // Ou o seletor do seu elemento
            if (meuCampo) {
                meuCampo.dispatchEvent(event);
            }
        }


</script>


  
</body>
</html>
